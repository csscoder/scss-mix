///* Font scale */
///***********************************************/
///* Font scale */
@mixin font-scale($font_min: 14px, $font_max: 16px, $firstBreakPoint: $ss-start-step-font-scale, $endBreakPoint: $ss-end-step-font-scale) {

  $font_min: _strip-unit($font_min);
  $font_max: _strip-unit($font_max);

  // reverse fonts sizes if needed
  $listFonts:  $font_min, $font_max;
  $font_min: min($listFonts...);
  $font_max: max($listFonts...);

  // reverse breakpoint if needed
  @if(_strip-unit(map-get($ss-media-breakpoints, $firstBreakPoint)) > _strip-unit(map-get($ss-media-breakpoints, $endBreakPoint)) ) {
    $helper: $firstBreakPoint;
    $firstBreakPoint: $endBreakPoint;
    $endBreakPoint: $helper;
  }

  $width_min: _strip-unit(map-get($ss-media-breakpoints, $firstBreakPoint));
  $width_max: _strip-unit(map-get($ss-media-breakpoints, $endBreakPoint));

  $k: _precision_round(($font_max - $font_min) / ($width_max - $width_min), 4);
  $b: _precision_round($font_min - ($k * $width_min), 4);
  $l: $k * 100vw;

  font-size: $font_min + px;

  @include mq($firstBreakPoint) {
    @if $b >= 0 {
      font-size:  calc( #{$l} + #{$b + px} );
    } @else {
      $b: abs($b);
      font-size:  calc( #{$l} - #{$b + px} );
    }
    outline: 0.0001vw;
  }

  @include mq($endBreakPoint) {
    font-size: $font_max + px;
  }
}

///* Font scale CSS variables */
$_font-scale-var-min-width: _strip-unit(map-get($ss-media-breakpoints, $ss-start-step-font-scale));
$_font-scale-var-max-width: _strip-unit(map-get($ss-media-breakpoints, $ss-end-step-font-scale));

@mixin font-scale-var($font-min: 12, $font-max: 16) {
  // reverse fonts sizes if needed
  $listFonts:  $font-min, $font-max;
  $font-min: min($listFonts...);
  $font-max: max($listFonts...);

  --minfz: #{_strip-unit($font-min)};
  --maxfz: #{_strip-unit($font-max)};
  font-size: var(--ssfz);
  // fix for Safari resize re-render box
  outline: 0.0001vw;
}